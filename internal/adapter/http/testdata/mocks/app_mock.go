// Code generated by MockGen. DO NOT EDIT.
// Source: dag.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	dag "davidterranova/jurigen/internal/dag"
	usecase "davidterranova/jurigen/internal/usecase"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// MockApp is a mock of App interface.
type MockApp struct {
	ctrl     *gomock.Controller
	recorder *MockAppMockRecorder
}

// MockAppMockRecorder is the mock recorder for MockApp.
type MockAppMockRecorder struct {
	mock *MockApp
}

// NewMockApp creates a new mock instance.
func NewMockApp(ctrl *gomock.Controller) *MockApp {
	mock := &MockApp{ctrl: ctrl}
	mock.recorder = &MockAppMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockApp) EXPECT() *MockAppMockRecorder {
	return m.recorder
}

// GetDAG mocks base method.
func (m *MockApp) GetDAG(ctx context.Context, cmd usecase.CmdGetDAG) (*dag.DAG, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDAG", ctx, cmd)
	ret0, _ := ret[0].(*dag.DAG)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDAG indicates an expected call of GetDAG.
func (mr *MockAppMockRecorder) GetDAG(ctx, cmd interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDAG", reflect.TypeOf((*MockApp)(nil).GetDAG), ctx, cmd)
}

// ListDAGs mocks base method.
func (m *MockApp) ListDAGs(ctx context.Context, cmd usecase.CmdListDAGs) ([]uuid.UUID, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListDAGs", ctx, cmd)
	ret0, _ := ret[0].([]uuid.UUID)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListDAGs indicates an expected call of ListDAGs.
func (mr *MockAppMockRecorder) ListDAGs(ctx, cmd interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListDAGs", reflect.TypeOf((*MockApp)(nil).ListDAGs), ctx, cmd)
}
